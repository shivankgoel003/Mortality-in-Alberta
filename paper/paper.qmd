---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)
library(readxl)
library(here)

deaths_data <- read.csv(here("data/analysis_data/cleaned_file.csv"))
air_quality_data <- read.csv(here("data/analysis_data/cleaned_air_data.csv"))
data <- read.csv(here("data/analysis_data/cleaned_chart_data.csv"))
data_peak <- read.csv(here("data/analysis_data/cleaned_peak_data.csv"))
data_lung <- read.csv(here("data/analysis_data/merged_data.csv"))
data_heart <- read.csv(here("data/analysis_data/merged_heart_data.csv"))
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

# Plot the regression graph
ggplot(data, aes(x = total_deaths, y = provincial_average)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Total Deaths", y = "Provincial Average", title = "Regression Graph") +
  theme_minimal()


# Plot the regression graph
ggplot(data_peak, aes(x = total_deaths, y = provincial_average)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Total Deaths", y = "Provincial Average", title = "Regression Graph") +
  theme_minimal()


# Plot the regression graph
ggplot(data_peak, aes(x = provincial_average, y = total_deaths)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Provincial Average", y = "Total Deaths", title = "Regression Graph") +
  theme_minimal()


# Plot the regression graph
ggplot(data, aes(x = provincial_average, y = total_deaths)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Provincial Average", y = "Total Deaths", title = "Regression Graph") +
  theme_minimal()


# Plot the regression graph for all lungs causes
ggplot(data_lung, aes(x = provincial_average, y = total_deaths)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Provincial Average", y = "Total Deaths", title = "Regression Lung") +
  theme_minimal()

# Plot the regression graph for all heart causes
ggplot(data, aes(x = provincial_average, y = total_deaths)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line without confidence interval
  labs(x = "Provincial Average", y = "Total Deaths", title = "Regression Heart") +
  theme_minimal()


```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

# analysis_data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))
# 
# analysis_data |> 
#   ggplot(aes(x = width, y = length)) +
#   geom_point(alpha = 0.8) +
#   theme_minimal() +
#   labs(x = "Wing width (mm)",
#        y = "Wing length (mm)")
```

Talk way more about it. 



# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# 
# library(rstanarm)
# 
# first_model <-
#   readRDS(file = here::here("models/first_model.rds"))
# 
# poisson_model <-
#   readRDS(file = here::here("models/poisson_model.rds"))
# 
# causes_model <-
#   readRDS(file = here::here("models/causes_model.rds"))
# 
# p_average_model <-
#   readRDS(file = here::here("models/p_average_model.rds"))
# 


library(rstanarm)
library(here)
library(ggplot2)
library(modelsummary)

# Assuming you've already read your models as before
neg_binom_model <- readRDS(file = here::here("models/neg_binom_model.rds"))
stan_neg_binom_model <- readRDS(file = here::here("models/stan_neg_binom_model.rds"))
stan_poisson_model <-readRDS(file = here::here("models/stan_poisson_model.rds"))
peak_neg_binom_model <- readRDS(file = here::here("models/peak_neg_binom_model.rds"))
peak_poisson_model <-readRDS(file = here::here("models/peak_poisson_model.rds"))
first_model <-
  readRDS(file = here::here("models/first_model.rds"))

poisson_model <-
  readRDS(file = here::here("models/poisson_model.rds"))

```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false
library(modelsummary)
# modelsummary::modelsummary(
#   list(
#     "First model" = first_model
#   ),
#   #statistic = "mad",
#   fmt = 2
# )
# 
# modelsummary::modelsummary(
#   list(
#     "First model" = poisson_model
#   ),
#   #statistic = "mad",
#   fmt = 2
# )
# 
# modelsummary::modelsummary(
#   list(
#     "First model" = causes_model
#   ),
#   #statistic = "mad",
#   fmt = 2
# )
# 
# modelsummary::modelsummary(
#   list(
#     "First model" = p_average_model
#   ),
#   #statistic = "mad",
#   fmt = 2
# )
# 


if (!requireNamespace("modelsummary", quietly = TRUE)) {
  install.packages("modelsummary")
}
library(modelsummary)

if (!requireNamespace("broom.mixed", quietly = TRUE)) {
  install.packages("broom.mixed")
}

library(broom.mixed)

coef_short_names <- 
  c("causeAll other forms of chronic ischemic heart disease" = "Ischemic Heart Disease",
    "causeMalignant neoplasms of trachea, bronchus and lung" = "Trachea/Bronchus/Lung Cancer",
    "causeOrganic dementia" = "Organic Dementia",
    "causeOther chronic obstructive pulmonary disease" = "COPD"
  )

# Summarize the models
modelsummary(
  list(
    "Poisson" = poisson_model,
    "Negative binomial" = first_model
  ),
  coef_map = coef_short_names,
  estimate_function = function(model) {
    broom.mixed::tidy(model, parameters = "all", conf.int = TRUE)
  }
)

```
# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme(legend.position = "bottom")

pp_check(poisson_model) +
  theme(legend.position = "bottom")

pp_stan_neg_binom_model <- pp_check(stan_neg_binom_model)
pp_stan_neg_binom_model + theme(legend.position = "bottom")


pp_stan_poisson_model <- pp_check(stan_poisson_model)
pp_stan_poisson_model + theme(legend.position = "bottom")


pp_check(peak_poisson_model) +
  theme(legend.position = "bottom")

pp_stan_neg_binom_model <- pp_check(peak_poisson_model)
pp_stan_neg_binom_model + theme(legend.position = "bottom")

pp_check(peak_neg_binom_model) +
  theme(legend.position = "bottom")

pp_stan_neg_binom_model <- pp_check(peak_neg_binom_model)
pp_stan_neg_binom_model + theme(legend.position = "bottom")

```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


